{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red116\green187\blue89;\red29\green29\blue29;}
{\*\expandedcolortbl;;\csgenericrgb\c45490\c73333\c34902;\csgenericrgb\c11373\c11373\c11373;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\i\fs26 \cf2 \cb3 /*\
 *\
 * Estructura de los test\
        Arrange\
        Act\
        Assert\
 *\
 * Reglas FizzBuzzLogic\
 * Crear una clase que tenga un m\'e9todo que dado un n\'famero retorne:\
        Fizz si el n\'famero es divisible por 3\
        Buzz si el n\'famero es divisible por 5\
        FizzBuzz si el n\'famero es divisible por 3 y 5\
        Si el n\'famero no es divisible por 3 ni 5 retorna el n\'famero\
        Si el n\'famero es negativo o > 100 retorna un error\
 *\
 * Definir tests\
 *      1. Se llama a la funcion para ver que no exista la clase \
 *      2. Se pasa un n\'famero divisible por 3 y retorna Fizz\
 *         Se pasa un 3 => Fizz\
 *      3. Se pasa un n\'famero divisible por 5 y retorna Buzz\
 *          Se pasa un 5 => Buzz \
 *      4. se pasa un numero divisble por 3 y 5 y retorna FizzBuzz\
 *          se pasa 15 => FizzBuzz\
 *      5. Se pasa un n\'famero no divisble por 3 y retorna el numero como string\
 *        Se pasa un 6 => Fizz\
 *        Se pasa un 10 => Fizz\
 *        Se pasa un 30 => FizzBuzz\
 *      6. se pasa un n\'famero negativo y retorna excepci\'f3n\
 *      7. se pasa un n\'famero mayor que 100 retorna una excepci\'f3n\
 *\
 */ \
\
}